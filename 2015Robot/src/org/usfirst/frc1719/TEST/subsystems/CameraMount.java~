// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1719.TEST.subsystems;

import org.usfirst.frc1719.TEST.Robot;
import org.usfirst.frc1719.TEST.RobotMap;
import org.usfirst.frc1719.TEST.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class CameraMount extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Servo yServo = RobotMap.cameraMountYServo;
    Servo xServo = RobotMap.cameraMountXServo;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    	setDefaultCommand(new DriveServos());
    }
    
    //position should be between -1 and 1
    public void setXServo(double position) {
    	
    	// Map the joystick; position to the servo position
    	position += 2;
    	position /= 4;
    	
    	xServo.set(position);
    }
    
    // Make Servo pan slower
    public void setXServoPan(double joystickPosition) {
    	panPositionX += (joystickPosition * SERVO_INCREMENT);
    	if (panPositionX < SERVO_MIN) panPositionX = SERVO_MIN;
    	if (panPositionX > SERVO_MAX) panPositionX = SERVO_MAX;
    	xServo.set(panPositionX);
    }
    
    public void setYServoPan(double joystickPosition) {
    	panPositionY -= (joystickPosition * SERVO_INCREMENT);
    	if (panPositionY < SERVO_MIN) panPositionY = SERVO_MIN;
    	if (panPositionY > SERVOY_MAX) panPositionY = SERVOY_MAX;
    	yServo.set(panPositionY);
    }
    
    //Same as setXServo, but for the y servo
    public void setYServo(double position) {
    	
    	// Map  the joystick position to the servo position
    	position -= 2;
    	position /= -4;
    	
    	yServo.set(position);
    }
}

